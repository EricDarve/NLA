{"version":3,"file":"workerpool.js","sources":["../src/environment.js","../src/Promise.js","../src/validateOptions.js","../src/generated/embeddedWorker.js","../src/WorkerHandler.js","../src/debug-port-allocator.js","../src/Pool.js","../src/transfer.js","../src/worker.js","../src/index.js"],"sourcesContent":["\n// source: https://github.com/flexdinesh/browser-or-node\n// source: https://github.com/mozilla/pdf.js/blob/7ea0e40e588864cd938d1836ec61f1928d3877d3/src/shared/util.js#L24\nvar isNode = function (nodeProcess) {\n  return (\n    typeof nodeProcess !== 'undefined' &&\n    nodeProcess.versions != null &&\n    nodeProcess.versions.node != null &&\n    nodeProcess + '' === '[object process]'\n  );\n}\nmodule.exports.isNode = isNode\n\n// determines the JavaScript platform: browser or node\nmodule.exports.platform = typeof process !== 'undefined' && isNode(process)\n  ? 'node'\n  : 'browser';\n\n// determines whether the code is running in main thread or not\n// note that in node.js we have to check both worker_thread and child_process\nvar worker_threads = module.exports.platform === 'node' && require('worker_threads');\nmodule.exports.isMainThread = module.exports.platform === 'node'\n  ? ((!worker_threads || worker_threads.isMainThread) && !process.connected)\n  : typeof Window !== 'undefined';\n\n// determines the number of cpus available\nmodule.exports.cpus = module.exports.platform === 'browser'\n  ? self.navigator.hardwareConcurrency\n  : require('os').cpus().length;\n\n","'use strict';\n\n/**\n * Promise\n *\n * Inspired by https://gist.github.com/RubaXa/8501359 from RubaXa <trash@rubaxa.org>\n * @template T\n * @template [E=Error]\n * @param {Function} handler   Called as handler(resolve: Function, reject: Function)\n * @param {Promise} [parent]   Parent promise for propagation of cancel and timeout\n */\nfunction Promise(handler, parent) {\n  var me = this;\n\n  if (!(this instanceof Promise)) {\n    throw new SyntaxError('Constructor must be called with the new operator');\n  }\n\n  if (typeof handler !== 'function') {\n    throw new SyntaxError('Function parameter handler(resolve, reject) missing');\n  }\n\n  var _onSuccess = [];\n  var _onFail = [];\n\n  // status\n  /**\n   * @readonly\n   */\n  this.resolved = false;\n  /**\n   * @readonly\n   */\n  this.rejected = false;\n  /**\n   * @readonly\n   */\n  this.pending = true;\n\n  /**\n   * Process onSuccess and onFail callbacks: add them to the queue.\n   * Once the promise is resolved, the function _promise is replace.\n   * @param {Function} onSuccess\n   * @param {Function} onFail\n   * @private\n   */\n  var _process = function (onSuccess, onFail) {\n    _onSuccess.push(onSuccess);\n    _onFail.push(onFail);\n  };\n\n  /**\n   * Add an onSuccess callback and optionally an onFail callback to the Promise\n   * @template TT\n   * @template [TE=never]\n   * @param {(r: T) => TT | PromiseLike<TT>} onSuccess\n   * @param {(r: E) => TE | PromiseLike<TE>} [onFail]\n   * @returns {Promise<TT | TE, any>} promise\n   */\n  this.then = function (onSuccess, onFail) {\n    return new Promise(function (resolve, reject) {\n      var s = onSuccess ? _then(onSuccess, resolve, reject) : resolve;\n      var f = onFail    ? _then(onFail,    resolve, reject) : reject;\n\n      _process(s, f);\n    }, me);\n  };\n\n  /**\n   * Resolve the promise\n   * @param {*} result\n   * @type {Function}\n   */\n  var _resolve = function (result) {\n    // update status\n    me.resolved = true;\n    me.rejected = false;\n    me.pending = false;\n\n    _onSuccess.forEach(function (fn) {\n      fn(result);\n    });\n\n    _process = function (onSuccess, onFail) {\n      onSuccess(result);\n    };\n\n    _resolve = _reject = function () { };\n\n    return me;\n  };\n\n  /**\n   * Reject the promise\n   * @param {Error} error\n   * @type {Function}\n   */\n  var _reject = function (error) {\n    // update status\n    me.resolved = false;\n    me.rejected = true;\n    me.pending = false;\n\n    _onFail.forEach(function (fn) {\n      fn(error);\n    });\n\n    _process = function (onSuccess, onFail) {\n      onFail(error);\n    };\n\n    _resolve = _reject = function () { }\n\n    return me;\n  };\n\n  /**\n   * Cancel the promise. This will reject the promise with a CancellationError\n   * @returns {this} self\n   */\n  this.cancel = function () {\n    if (parent) {\n      parent.cancel();\n    }\n    else {\n      _reject(new CancellationError());\n    }\n\n    return me;\n  };\n\n  /**\n   * Set a timeout for the promise. If the promise is not resolved within\n   * the time, the promise will be cancelled and a TimeoutError is thrown.\n   * If the promise is resolved in time, the timeout is removed.\n   * @param {number} delay     Delay in milliseconds\n   * @returns {this} self\n   */\n  this.timeout = function (delay) {\n    if (parent) {\n      parent.timeout(delay);\n    }\n    else {\n      var timer = setTimeout(function () {\n        _reject(new TimeoutError('Promise timed out after ' + delay + ' ms'));\n      }, delay);\n\n      me.always(function () {\n        clearTimeout(timer);\n      });\n    }\n\n    return me;\n  };\n\n  // attach handler passing the resolve and reject functions\n  handler(function (result) {\n    _resolve(result);\n  }, function (error) {\n    _reject(error);\n  });\n}\n\n/**\n * Execute given callback, then call resolve/reject based on the returned result\n * @param {Function} callback\n * @param {Function} resolve\n * @param {Function} reject\n * @returns {Function}\n * @private\n */\nfunction _then(callback, resolve, reject) {\n  return function (result) {\n    try {\n      var res = callback(result);\n      if (res && typeof res.then === 'function' && typeof res['catch'] === 'function') {\n        // method returned a promise\n        res.then(resolve, reject);\n      }\n      else {\n        resolve(res);\n      }\n    }\n    catch (error) {\n      reject(error);\n    }\n  }\n}\n\n/**\n * Add an onFail callback to the Promise\n * @template TT\n * @param {(error: E) => TT | PromiseLike<TT>} onFail\n * @returns {Promise<T | TT>} promise\n */\nPromise.prototype['catch'] = function (onFail) {\n  return this.then(null, onFail);\n};\n\n// TODO: add support for Promise.catch(Error, callback)\n// TODO: add support for Promise.catch(Error, Error, callback)\n\n/**\n * Execute given callback when the promise either resolves or rejects.\n * @template TT\n * @param {() => Promise<TT>} fn\n * @returns {Promise<TT>} promise\n */\nPromise.prototype.always = function (fn) {\n  return this.then(fn, fn);\n};\n\n/**\n * Create a promise which resolves when all provided promises are resolved,\n * and fails when any of the promises resolves.\n * @param {Promise[]} promises\n * @returns {Promise<any[], any>} promise\n */\nPromise.all = function (promises){\n  return new Promise(function (resolve, reject) {\n    var remaining = promises.length,\n        results = [];\n\n    if (remaining) {\n      promises.forEach(function (p, i) {\n        p.then(function (result) {\n          results[i] = result;\n          remaining--;\n          if (remaining == 0) {\n            resolve(results);\n          }\n        }, function (error) {\n          remaining = 0;\n          reject(error);\n        });\n      });\n    }\n    else {\n      resolve(results);\n    }\n  });\n};\n\n/**\n * Create a promise resolver\n * @returns {{promise: Promise, resolve: Function, reject: Function}} resolver\n */\nPromise.defer = function () {\n  var resolver = {};\n\n  resolver.promise = new Promise(function (resolve, reject) {\n    resolver.resolve = resolve;\n    resolver.reject = reject;\n  });\n\n  return resolver;\n};\n\n/**\n * Create a cancellation error\n * @param {String} [message]\n * @extends Error\n */\nfunction CancellationError(message) {\n  this.message = message || 'promise cancelled';\n  this.stack = (new Error()).stack;\n}\n\nCancellationError.prototype = new Error();\nCancellationError.prototype.constructor = Error;\nCancellationError.prototype.name = 'CancellationError';\n\nPromise.CancellationError = CancellationError;\n\n\n/**\n * Create a timeout error\n * @param {String} [message]\n * @extends Error\n */\nfunction TimeoutError(message) {\n  this.message = message || 'timeout exceeded';\n  this.stack = (new Error()).stack;\n}\n\nTimeoutError.prototype = new Error();\nTimeoutError.prototype.constructor = Error;\nTimeoutError.prototype.name = 'TimeoutError';\n\nPromise.TimeoutError = TimeoutError;\n\n\nexports.Promise = Promise;\n","/**\n * Validate that the object only contains known option names\n * - Throws an error when unknown options are detected\n * - Throws an error when some of the allowed options are attached\n * @param {Object | undefined} options\n * @param {string[]} allowedOptionNames\n * @param {string} objectName\n * @retrun {Object} Returns the original options\n */\nexports.validateOptions = function validateOptions(options, allowedOptionNames, objectName) {\n  if (!options) {\n    return\n  }\n\n  var optionNames = options ?  Object.keys(options) : []\n\n  // check for unknown properties\n  var unknownOptionName = optionNames.find(optionName => !allowedOptionNames.includes(optionName))\n  if (unknownOptionName) {\n    throw new Error('Object \"' + objectName + '\" contains an unknown option \"' + unknownOptionName + '\"')\n  }\n\n  // check for inherited properties which are not present on the object itself\n  var illegalOptionName = allowedOptionNames.find(allowedOptionName => {\n    return Object.prototype[allowedOptionName] && !optionNames.includes(allowedOptionName)\n  })\n  if (illegalOptionName) {\n    throw new Error('Object \"' + objectName + '\" contains an inherited option \"' + illegalOptionName + '\" which is ' +\n      'not defined in the object itself but in its prototype. Only plain objects are allowed. ' +\n      'Please remove the option from the prototype or override it with a value \"undefined\".')\n  }\n\n  return options\n}\n\n// source: https://developer.mozilla.org/en-US/docs/Web/API/Worker/Worker\nexports.workerOptsNames = [\n  'credentials', 'name', 'type' ]\n\n// source: https://nodejs.org/api/child_process.html#child_processforkmodulepath-args-options\nexports.forkOptsNames = [\n  'cwd', 'detached', 'env', 'execPath', 'execArgv', 'gid', 'serialization',\n  'signal', 'killSignal', 'silent', 'stdio', 'uid', 'windowsVerbatimArguments',\n  'timeout'\n]\n\n// source: https://nodejs.org/api/worker_threads.html#new-workerfilename-options\nexports.workerThreadOptsNames = [\n  'argv', 'env', 'eval', 'execArgv', 'stdin', 'stdout', 'stderr', 'workerData',\n  'trackUnmanagedFds', 'transferList', 'resourceLimits', 'name'\n]\n","/**\n * embeddedWorker.js contains an embedded version of worker.js.\n * This file is automatically generated,\n * changes made in this file will be overwritten.\n */\nmodule.exports = \"!function(e,n){\\\"object\\\"==typeof exports&&\\\"undefined\\\"!=typeof module?module.exports=n():\\\"function\\\"==typeof define&&define.amd?define(n):(e=\\\"undefined\\\"!=typeof globalThis?globalThis:e||self).worker=n()}(this,(function(){\\\"use strict\\\";function e(n){return e=\\\"function\\\"==typeof Symbol&&\\\"symbol\\\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\\\"function\\\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\\\"symbol\\\":typeof e},e(n)}function n(e){return e&&e.__esModule&&Object.prototype.hasOwnProperty.call(e,\\\"default\\\")?e.default:e}var t={};var r=function(e,n){this.message=e,this.transfer=n};return function(n){var t=r,o={exit:function(){}};if(\\\"undefined\\\"!=typeof self&&\\\"function\\\"==typeof postMessage&&\\\"function\\\"==typeof addEventListener)o.on=function(e,n){addEventListener(e,(function(e){n(e.data)}))},o.send=function(e,n){n?postMessage(e,n):postMessage(e)};else{if(\\\"undefined\\\"==typeof process)throw new Error(\\\"Script must be executed as a worker\\\");var i;try{i=require(\\\"worker_threads\\\")}catch(n){if(\\\"object\\\"!==e(n)||null===n||\\\"MODULE_NOT_FOUND\\\"!==n.code)throw n}if(i&&null!==i.parentPort){var s=i.parentPort;o.send=s.postMessage.bind(s),o.on=s.on.bind(s),o.exit=process.exit.bind(process)}else o.on=process.on.bind(process),o.send=function(e){process.send(e)},o.on(\\\"disconnect\\\",(function(){process.exit(1)})),o.exit=process.exit.bind(process)}function u(e){return Object.getOwnPropertyNames(e).reduce((function(n,t){return Object.defineProperty(n,t,{value:e[t],enumerable:!0})}),{})}function d(e){return e&&\\\"function\\\"==typeof e.then&&\\\"function\\\"==typeof e.catch}o.methods={},o.methods.run=function(e,n){var t=new Function(\\\"return (\\\"+e+\\\").apply(null, arguments);\\\");return t.apply(t,n)},o.methods.methods=function(){return Object.keys(o.methods)},o.terminationHandler=void 0,o.cleanupAndExit=function(e){var n=function(){o.exit(e)};if(!o.terminationHandler)return n();var t=o.terminationHandler(e);d(t)?t.then(n,n):n()};var f=null;o.on(\\\"message\\\",(function(e){if(\\\"__workerpool-terminate__\\\"===e)return o.cleanupAndExit(0);try{var n=o.methods[e.method];if(!n)throw new Error('Unknown method \\\"'+e.method+'\\\"');f=e.id;var r=n.apply(n,e.params);d(r)?r.then((function(n){n instanceof t?o.send({id:e.id,result:n.message,error:null},n.transfer):o.send({id:e.id,result:n,error:null}),f=null})).catch((function(n){o.send({id:e.id,result:null,error:u(n)}),f=null})):(r instanceof t?o.send({id:e.id,result:r.message,error:null},r.transfer):o.send({id:e.id,result:r,error:null}),f=null)}catch(n){o.send({id:e.id,result:null,error:u(n)})}})),o.register=function(e,n){if(e)for(var t in e)e.hasOwnProperty(t)&&(o.methods[t]=e[t]);n&&(o.terminationHandler=n.onTerminate),o.send(\\\"ready\\\")},o.emit=function(e){if(f){if(e instanceof t)return void o.send({id:f,isEvent:!0,payload:e.message},e.transfer);o.send({id:f,isEvent:!0,payload:e})}},n.add=o.register,n.emit=o.emit}(t),n(t)}));\\n//# sourceMappingURL=worker.min.js.map\\n\";\n","'use strict';\n\nvar {Promise} = require('./Promise');\nvar environment = require('./environment');\nconst {validateOptions, forkOptsNames, workerThreadOptsNames, workerOptsNames} = require(\"./validateOptions\");\n\n/**\n * Special message sent by parent which causes a child process worker to terminate itself.\n * Not a \"message object\"; this string is the entire message.\n */\nvar TERMINATE_METHOD_ID = '__workerpool-terminate__';\n\nfunction ensureWorkerThreads() {\n  var WorkerThreads = tryRequireWorkerThreads()\n  if (!WorkerThreads) {\n    throw new Error('WorkerPool: workerType = \\'thread\\' is not supported, Node >= 11.7.0 required')\n  }\n\n  return WorkerThreads;\n}\n\n// check whether Worker is supported by the browser\nfunction ensureWebWorker() {\n  // Workaround for a bug in PhantomJS (Or QtWebkit): https://github.com/ariya/phantomjs/issues/14534\n  if (typeof Worker !== 'function' && (typeof Worker !== 'object' || typeof Worker.prototype.constructor !== 'function')) {\n    throw new Error('WorkerPool: Web Workers not supported');\n  }\n}\n\nfunction tryRequireWorkerThreads() {\n  try {\n    return require('worker_threads');\n  } catch(error) {\n    if (typeof error === 'object' && error !== null && error.code === 'MODULE_NOT_FOUND') {\n      // no worker_threads available (old version of node.js)\n      return null;\n    } else {\n      throw error;\n    }\n  }\n}\n\n// get the default worker script\nfunction getDefaultWorker() {\n  if (environment.platform === 'browser') {\n    // test whether the browser supports all features that we need\n    if (typeof Blob === 'undefined') {\n      throw new Error('Blob not supported by the browser');\n    }\n    if (!window.URL || typeof window.URL.createObjectURL !== 'function') {\n      throw new Error('URL.createObjectURL not supported by the browser');\n    }\n\n    // use embedded worker.js\n    var blob = new Blob([require('./generated/embeddedWorker')], {type: 'text/javascript'});\n    return window.URL.createObjectURL(blob);\n  }\n  else {\n    // use external worker.js in current directory\n    return __dirname + '/worker.js';\n  }\n}\n\nfunction setupWorker(script, options) {\n  if (options.workerType === 'web') { // browser only\n    ensureWebWorker();\n    return setupBrowserWorker(script, options.workerOpts, Worker);\n  } else if (options.workerType === 'thread') { // node.js only\n    WorkerThreads = ensureWorkerThreads();\n    return setupWorkerThreadWorker(script, WorkerThreads, options);\n  } else if (options.workerType === 'process' || !options.workerType) { // node.js only\n    return setupProcessWorker(script, resolveForkOptions(options), require('child_process'));\n  } else { // options.workerType === 'auto' or undefined\n    if (environment.platform === 'browser') {\n      ensureWebWorker();\n      return setupBrowserWorker(script, options.workerOpts, Worker);\n    }\n    else { // environment.platform === 'node'\n      var WorkerThreads = tryRequireWorkerThreads();\n      if (WorkerThreads) {\n        return setupWorkerThreadWorker(script, WorkerThreads, options);\n      } else {\n        return setupProcessWorker(script, resolveForkOptions(options), require('child_process'));\n      }\n    }\n  }\n}\n\nfunction setupBrowserWorker(script, workerOpts, Worker) {\n  // validate the options right before creating the worker (not when creating the pool)\n  validateOptions(workerOpts, workerOptsNames, 'workerOpts')\n\n  // create the web worker\n  var worker = new Worker(script, workerOpts);\n\n  worker.isBrowserWorker = true;\n  // add node.js API to the web worker\n  worker.on = function (event, callback) {\n    this.addEventListener(event, function (message) {\n      callback(message.data);\n    });\n  };\n  worker.send = function (message, transfer) {\n    this.postMessage(message, transfer);\n  };\n  return worker;\n}\n\nfunction setupWorkerThreadWorker(script, WorkerThreads, options) {\n  // validate the options right before creating the worker thread (not when creating the pool)\n  validateOptions(options?.workerThreadOpts, workerThreadOptsNames, 'workerThreadOpts')\n\n  var worker = new WorkerThreads.Worker(script, {\n    stdout: options?.emitStdStreams ?? false, // pipe worker.STDOUT to process.STDOUT if not requested\n    stderr: options?.emitStdStreams ?? false,  // pipe worker.STDERR to process.STDERR if not requested\n    ...options?.workerThreadOpts\n  });\n  worker.isWorkerThread = true;\n  worker.send = function(message, transfer) {\n    this.postMessage(message, transfer);\n  };\n\n  worker.kill = function() {\n    this.terminate();\n    return true;\n  };\n\n  worker.disconnect = function() {\n    this.terminate();\n  };\n\n  if (options?.emitStdStreams) {\n    worker.stdout.on('data', (data) => worker.emit(\"stdout\", data))\n    worker.stderr.on('data', (data) => worker.emit(\"stderr\", data))\n  }\n\n  return worker;\n}\n\nfunction setupProcessWorker(script, options, child_process) {\n  // validate the options right before creating the child process (not when creating the pool)\n  validateOptions(options.forkOpts, forkOptsNames, 'forkOpts')\n\n  // no WorkerThreads, fallback to sub-process based workers\n  var worker = child_process.fork(\n    script,\n    options.forkArgs,\n    options.forkOpts\n  );\n\n  // ignore transfer argument since it is not supported by process\n  var send = worker.send;\n  worker.send = function (message) {\n    return send.call(worker, message);\n  };\n\n  if (options.emitStdStreams) {\n    worker.stdout.on('data', (data) => worker.emit(\"stdout\", data))\n    worker.stderr.on('data', (data) => worker.emit(\"stderr\", data))\n  }\n\n  worker.isChildProcess = true;\n  return worker;\n}\n\n// add debug flags to child processes if the node inspector is active\nfunction resolveForkOptions(opts) {\n  opts = opts || {};\n\n  var processExecArgv = process.execArgv.join(' ');\n  var inspectorActive = processExecArgv.indexOf('--inspect') !== -1;\n  var debugBrk = processExecArgv.indexOf('--debug-brk') !== -1;\n\n  var execArgv = [];\n  if (inspectorActive) {\n    execArgv.push('--inspect=' + opts.debugPort);\n\n    if (debugBrk) {\n      execArgv.push('--debug-brk');\n    }\n  }\n\n  process.execArgv.forEach(function(arg) {\n    if (arg.indexOf('--max-old-space-size') > -1) {\n      execArgv.push(arg)\n    }\n  })\n\n  return Object.assign({}, opts, {\n    forkArgs: opts.forkArgs,\n    forkOpts: Object.assign({}, opts.forkOpts, {\n      execArgv: (opts.forkOpts && opts.forkOpts.execArgv || [])\n      .concat(execArgv),\n      stdio: opts.emitStdStreams ? \"pipe\": undefined\n    })\n  });\n}\n\n/**\n * Converts a serialized error to Error\n * @param {Object} obj Error that has been serialized and parsed to object\n * @return {Error} The equivalent Error.\n */\nfunction objectToError (obj) {\n  var temp = new Error('')\n  var props = Object.keys(obj)\n\n  for (var i = 0; i < props.length; i++) {\n    temp[props[i]] = obj[props[i]]\n  }\n\n  return temp\n}\n\nfunction handleEmittedStdPayload(handler, payload) {\n  // TODO: refactor if parallel task execution gets added\n  if (Object.keys(handler.processing).length !== 1) {\n    return;\n  }\n  var task = Object.values(handler.processing)[0]\n  if (task.options && typeof task.options.on === 'function') {\n    task.options.on(payload);\n  }\n}\n\n/**\n * A WorkerHandler controls a single worker. This worker can be a child process\n * on node.js or a WebWorker in a browser environment.\n * @param {String} [script] If no script is provided, a default worker with a\n *                          function run will be created.\n * @param {import('./types.js').WorkerPoolOptions} [_options] See docs\n * @constructor\n */\nfunction WorkerHandler(script, _options) {\n  var me = this;\n  var options = _options || {};\n\n  this.script = script || getDefaultWorker();\n  this.worker = setupWorker(this.script, options);\n  this.debugPort = options.debugPort;\n  this.forkOpts = options.forkOpts;\n  this.forkArgs = options.forkArgs;\n  this.workerOpts = options.workerOpts;\n  this.workerThreadOpts = options.workerThreadOpts\n  this.workerTerminateTimeout = options.workerTerminateTimeout;\n\n  // The ready message is only sent if the worker.add method is called (And the default script is not used)\n  if (!script) {\n    this.worker.ready = true;\n  }\n\n  // queue for requests that are received before the worker is ready\n  this.requestQueue = [];\n\n  this.worker.on(\"stdout\", function (data) {\n    handleEmittedStdPayload(me, {\"stdout\": data.toString()})\n  })\n  this.worker.on(\"stderr\", function (data) {\n    handleEmittedStdPayload(me, {\"stderr\": data.toString()})\n  })\n\n  this.worker.on('message', function (response) {\n    if (me.terminated) {\n      return;\n    }\n    if (typeof response === 'string' && response === 'ready') {\n      me.worker.ready = true;\n      dispatchQueuedRequests();\n    } else {\n      // find the task from the processing queue, and run the tasks callback\n      var id = response.id;\n      var task = me.processing[id];\n      if (task !== undefined) {\n        if (response.isEvent) {\n          if (task.options && typeof task.options.on === 'function') {\n            task.options.on(response.payload);\n          }\n        } else {\n          // remove the task from the queue\n          delete me.processing[id];\n\n          // test if we need to terminate\n          if (me.terminating === true) {\n            // complete worker termination if all tasks are finished\n            me.terminate();\n          }\n\n          // resolve the task's promise\n          if (response.error) {\n            task.resolver.reject(objectToError(response.error));\n          }\n          else {\n            task.resolver.resolve(response.result);\n          }\n        }\n      }\n    }\n  });\n\n  // reject all running tasks on worker error\n  function onError(error) {\n    me.terminated = true;\n\n    for (var id in me.processing) {\n      if (me.processing[id] !== undefined) {\n        me.processing[id].resolver.reject(error);\n      }\n    }\n    me.processing = Object.create(null);\n  }\n\n  // send all queued requests to worker\n  function dispatchQueuedRequests()\n  {\n    for(const request of me.requestQueue.splice(0)) {\n      me.worker.send(request.message, request.transfer);\n    }\n  }\n\n  var worker = this.worker;\n  // listen for worker messages error and exit\n  this.worker.on('error', onError);\n  this.worker.on('exit', function (exitCode, signalCode) {\n    var message = 'Workerpool Worker terminated Unexpectedly\\n';\n\n    message += '    exitCode: `' + exitCode + '`\\n';\n    message += '    signalCode: `' + signalCode + '`\\n';\n\n    message += '    workerpool.script: `' +  me.script + '`\\n';\n    message += '    spawnArgs: `' +  worker.spawnargs + '`\\n';\n    message += '    spawnfile: `' + worker.spawnfile + '`\\n'\n\n    message += '    stdout: `' + worker.stdout + '`\\n'\n    message += '    stderr: `' + worker.stderr + '`\\n'\n\n    onError(new Error(message));\n  });\n\n  this.processing = Object.create(null); // queue with tasks currently in progress\n\n  this.terminating = false;\n  this.terminated = false;\n  this.cleaning = false;\n  this.terminationHandler = null;\n  this.lastId = 0;\n}\n\n/**\n * Get a list with methods available on the worker.\n * @return {Promise.<String[], Error>} methods\n */\nWorkerHandler.prototype.methods = function () {\n  return this.exec('methods');\n};\n\n/**\n * Execute a method with given parameters on the worker\n * @param {String} method\n * @param {Array} [params]\n * @param {{resolve: Function, reject: Function}} [resolver]\n * @param {import('./types.js').ExecOptions}  [options]\n * @return {Promise.<*, Error>} result\n */\nWorkerHandler.prototype.exec = function(method, params, resolver, options) {\n  if (!resolver) {\n    resolver = Promise.defer();\n  }\n\n  // generate a unique id for the task\n  var id = ++this.lastId;\n\n  // register a new task as being in progress\n  this.processing[id] = {\n    id: id,\n    resolver: resolver,\n    options: options\n  };\n\n  // build a JSON-RPC request\n  var request = {\n    message: {\n      id: id,\n      method: method,\n      params: params\n    },\n    transfer: options && options.transfer\n  };\n\n  if (this.terminated) {\n    resolver.reject(new Error('Worker is terminated'));\n  } else if (this.worker.ready) {\n    // send the request to the worker\n    this.worker.send(request.message, request.transfer);\n  } else {\n    this.requestQueue.push(request);\n  }\n\n  // on cancellation, force the worker to terminate\n  var me = this;\n  return resolver.promise.catch(function (error) {\n    if (error instanceof Promise.CancellationError || error instanceof Promise.TimeoutError) {\n      // remove this task from the queue. It is already rejected (hence this\n      // catch event), and else it will be rejected again when terminating\n      delete me.processing[id];\n\n      // terminate worker\n      return me.terminateAndNotify(true)\n        .then(function() {\n          throw error;\n        }, function(err) {\n          throw err;\n        });\n    } else {\n      throw error;\n    }\n  })\n};\n\n/**\n * Test whether the worker is processing any tasks or cleaning up before termination.\n * @return {boolean} Returns true if the worker is busy\n */\nWorkerHandler.prototype.busy = function () {\n  return this.cleaning || Object.keys(this.processing).length > 0;\n};\n\n/**\n * Terminate the worker.\n * @param {boolean} [force=false]   If false (default), the worker is terminated\n *                                  after finishing all tasks currently in\n *                                  progress. If true, the worker will be\n *                                  terminated immediately.\n * @param {function} [callback=null] If provided, will be called when process terminates.\n */\nWorkerHandler.prototype.terminate = function (force, callback) {\n  var me = this;\n  if (force) {\n    // cancel all tasks in progress\n    for (var id in this.processing) {\n      if (this.processing[id] !== undefined) {\n        this.processing[id].resolver.reject(new Error('Worker terminated'));\n      }\n    }\n    this.processing = Object.create(null);\n  }\n\n  if (typeof callback === 'function') {\n    this.terminationHandler = callback;\n  }\n  if (!this.busy()) {\n    // all tasks are finished. kill the worker\n    var cleanup = function(err) {\n      me.terminated = true;\n      me.cleaning = false;\n      if (me.worker != null && me.worker.removeAllListeners) {\n        // removeAllListeners is only available for child_process\n        me.worker.removeAllListeners('message');\n      }\n      me.worker = null;\n      me.terminating = false;\n      if (me.terminationHandler) {\n        me.terminationHandler(err, me);\n      } else if (err) {\n        throw err;\n      }\n    }\n\n    if (this.worker) {\n      if (typeof this.worker.kill === 'function') {\n        if (this.worker.killed) {\n          cleanup(new Error('worker already killed!'));\n          return;\n        }\n\n        // child process and worker threads\n        var cleanExitTimeout = setTimeout(function() {\n          if (me.worker) {\n            me.worker.kill();\n          }\n        }, this.workerTerminateTimeout);\n\n        this.worker.once('exit', function() {\n          clearTimeout(cleanExitTimeout);\n          if (me.worker) {\n            me.worker.killed = true;\n          }\n          cleanup();\n        });\n\n        if (this.worker.ready) {\n          this.worker.send(TERMINATE_METHOD_ID);\n        } else {\n          this.requestQueue.push({ message: TERMINATE_METHOD_ID });\n        }\n\n        // mark that the worker is cleaning up resources\n        // to prevent new tasks from being executed\n        this.cleaning = true;\n        return;\n      }\n      else if (typeof this.worker.terminate === 'function') {\n        this.worker.terminate(); // web worker\n        this.worker.killed = true;\n      }\n      else {\n        throw new Error('Failed to terminate worker');\n      }\n    }\n    cleanup();\n  }\n  else {\n    // we can't terminate immediately, there are still tasks being executed\n    this.terminating = true;\n  }\n};\n\n/**\n * Terminate the worker, returning a Promise that resolves when the termination has been done.\n * @param {boolean} [force=false]   If false (default), the worker is terminated\n *                                  after finishing all tasks currently in\n *                                  progress. If true, the worker will be\n *                                  terminated immediately.\n * @param {number} [timeout]        If provided and non-zero, worker termination promise will be rejected\n *                                  after timeout if worker process has not been terminated.\n * @return {Promise.<WorkerHandler, Error>}\n */\nWorkerHandler.prototype.terminateAndNotify = function (force, timeout) {\n  var resolver = Promise.defer();\n  if (timeout) {\n    resolver.promise.timeout(timeout);\n  }\n  this.terminate(force, function(err, worker) {\n    if (err) {\n      resolver.reject(err);\n    } else {\n      resolver.resolve(worker);\n    }\n  });\n  return resolver.promise;\n};\n\nmodule.exports = WorkerHandler;\nmodule.exports._tryRequireWorkerThreads = tryRequireWorkerThreads;\nmodule.exports._setupProcessWorker = setupProcessWorker;\nmodule.exports._setupBrowserWorker = setupBrowserWorker;\nmodule.exports._setupWorkerThreadWorker = setupWorkerThreadWorker;\nmodule.exports.ensureWorkerThreads = ensureWorkerThreads;\n","'use strict';\n\nvar MAX_PORTS = 65535;\nmodule.exports = DebugPortAllocator;\nfunction DebugPortAllocator() {\n  this.ports = Object.create(null);\n  this.length = 0;\n}\n\nDebugPortAllocator.prototype.nextAvailableStartingAt = function(starting) {\n  while (this.ports[starting] === true) {\n    starting++;\n  }\n\n  if (starting >= MAX_PORTS) {\n    throw new Error('WorkerPool debug port limit reached: ' + starting + '>= ' + MAX_PORTS );\n  }\n\n  this.ports[starting] = true;\n  this.length++;\n  return starting;\n};\n\nDebugPortAllocator.prototype.releasePort = function(port) {\n  delete this.ports[port];\n  this.length--;\n};\n\n","var {Promise} = require('./Promise');\nvar WorkerHandler = require('./WorkerHandler');\nvar environment = require('./environment');\nvar DebugPortAllocator = require('./debug-port-allocator');\nvar DEBUG_PORT_ALLOCATOR = new DebugPortAllocator();\n/**\n * A pool to manage workers, which can be created using the function workerpool.pool.\n *\n * @param {String} [script]   Optional worker script\n * @param {import('./types.js').WorkerPoolOptions} [options]  See docs\n * @constructor\n */\nfunction Pool(script, options) {\n  if (typeof script === 'string') {\n    /** @readonly */\n    this.script = script || null;\n  }\n  else {\n    this.script = null;\n    options = script;\n  }\n\n  /** @private */\n  this.workers = [];  // queue with all workers\n  /** @private */\n  this.tasks = [];    // queue with tasks awaiting execution\n\n  options = options || {};\n\n  /** @readonly */\n  this.forkArgs = Object.freeze(options.forkArgs || []);\n  /** @readonly */\n  this.forkOpts = Object.freeze(options.forkOpts || {});\n  /** @readonly */\n  this.workerOpts = Object.freeze(options.workerOpts || {});\n  /** @readonly */\n  this.workerThreadOpts = Object.freeze(options.workerThreadOpts || {})\n  /** @private */\n  this.debugPortStart = (options.debugPortStart || 43210);\n  /** @readonly @deprecated */\n  this.nodeWorker = options.nodeWorker;\n  /** @readonly\n   * @type {'auto' | 'web' | 'process' | 'thread'}\n   */\n  this.workerType = options.workerType || options.nodeWorker || 'auto'\n  /** @readonly */\n  this.maxQueueSize = options.maxQueueSize || Infinity;\n  /** @readonly */\n  this.workerTerminateTimeout = options.workerTerminateTimeout || 1000;\n\n  /** @readonly */\n  this.onCreateWorker = options.onCreateWorker || (() => null);\n  /** @readonly */\n  this.onTerminateWorker = options.onTerminateWorker || (() => null);\n\n  /** @readonly */\n  this.emitStdStreams = options.emitStdStreams || false\n\n  // configuration\n  if (options && 'maxWorkers' in options) {\n    validateMaxWorkers(options.maxWorkers);\n    /** @readonly */\n    this.maxWorkers = options.maxWorkers;\n  }\n  else {\n    this.maxWorkers = Math.max((environment.cpus || 4) - 1, 1);\n  }\n\n  if (options && 'minWorkers' in options) {\n    if(options.minWorkers === 'max') {\n      /** @readonly */\n      this.minWorkers = this.maxWorkers;\n    } else {\n      validateMinWorkers(options.minWorkers);\n      this.minWorkers = options.minWorkers;\n      this.maxWorkers = Math.max(this.minWorkers, this.maxWorkers);     // in case minWorkers is higher than maxWorkers\n    }\n    this._ensureMinWorkers();\n  }\n\n  /** @private */\n  this._boundNext = this._next.bind(this);\n\n\n  if (this.workerType === 'thread') {\n    WorkerHandler.ensureWorkerThreads();\n  }\n}\n\n\n/**\n * Execute a function on a worker.\n *\n * Example usage:\n *\n *   var pool = new Pool()\n *\n *   // call a function available on the worker\n *   pool.exec('fibonacci', [6])\n *\n *   // offload a function\n *   function add(a, b) {\n *     return a + b\n *   };\n *   pool.exec(add, [2, 4])\n *       .then(function (result) {\n *         console.log(result); // outputs 6\n *       })\n *       .catch(function(error) {\n *         console.log(error);\n *       });\n * @template { (...args: any[]) => any } T\n * @param {String | T} method  Function name or function.\n *                                    If `method` is a string, the corresponding\n *                                    method on the worker will be executed\n *                                    If `method` is a Function, the function\n *                                    will be stringified and executed via the\n *                                    workers built-in function `run(fn, args)`.\n * @param {Parameters<T> | null} [params]  Function arguments applied when calling the function\n * @param {import('./types.js').ExecOptions} [options]  Options\n * @return {Promise<ReturnType<T>>}\n */\nPool.prototype.exec = function (method, params, options) {\n  // validate type of arguments\n  if (params && !Array.isArray(params)) {\n    throw new TypeError('Array expected as argument \"params\"');\n  }\n\n  if (typeof method === 'string') {\n    var resolver = Promise.defer();\n\n    if (this.tasks.length >= this.maxQueueSize) {\n      throw new Error('Max queue size of ' + this.maxQueueSize + ' reached');\n    }\n\n    // add a new task to the queue\n    var tasks = this.tasks;\n    var task = {\n      method:  method,\n      params:  params,\n      resolver: resolver,\n      timeout: null,\n      options: options\n    };\n    tasks.push(task);\n\n    // replace the timeout method of the Promise with our own,\n    // which starts the timer as soon as the task is actually started\n    var originalTimeout = resolver.promise.timeout;\n    resolver.promise.timeout = function timeout (delay) {\n      if (tasks.indexOf(task) !== -1) {\n        // task is still queued -> start the timer later on\n        task.timeout = delay;\n        return resolver.promise;\n      }\n      else {\n        // task is already being executed -> start timer immediately\n        return originalTimeout.call(resolver.promise, delay);\n      }\n    };\n\n    // trigger task execution\n    this._next();\n\n    return resolver.promise;\n  }\n  else if (typeof method === 'function') {\n    // send stringified function and function arguments to worker\n    return this.exec('run', [String(method), params], options);\n  }\n  else {\n    throw new TypeError('Function or string expected as argument \"method\"');\n  }\n};\n\n/**\n * Create a proxy for current worker. Returns an object containing all\n * methods available on the worker. All methods return promises resolving the methods result.\n * @template { { [k: string]: (...args: any[]) => any } } T\n * @return {Promise<import('./types.js').Proxy<T>, Error>} Returns a promise which resolves with a proxy object\n */\nPool.prototype.proxy = function () {\n  if (arguments.length > 0) {\n    throw new Error('No arguments expected');\n  }\n\n  var pool = this;\n  return this.exec('methods')\n      .then(function (methods) {\n        var proxy = {};\n\n        methods.forEach(function (method) {\n          proxy[method] = function () {\n            return pool.exec(method, Array.prototype.slice.call(arguments));\n          }\n        });\n\n        return proxy;\n      });\n};\n\n/**\n * Creates new array with the results of calling a provided callback function\n * on every element in this array.\n * @param {Array} array\n * @param {function} callback  Function taking two arguments:\n *                             `callback(currentValue, index)`\n * @return {Promise.<Array>} Returns a promise which resolves  with an Array\n *                           containing the results of the callback function\n *                           executed for each of the array elements.\n */\n/* TODO: implement map\nPool.prototype.map = function (array, callback) {\n};\n*/\n\n/**\n * Grab the first task from the queue, find a free worker, and assign the\n * worker to the task.\n * @private\n */\nPool.prototype._next = function () {\n  if (this.tasks.length > 0) {\n    // there are tasks in the queue\n\n    // find an available worker\n    var worker = this._getWorker();\n    if (worker) {\n      // get the first task from the queue\n      var me = this;\n      var task = this.tasks.shift();\n\n      // check if the task is still pending (and not cancelled -> promise rejected)\n      if (task.resolver.promise.pending) {\n        // send the request to the worker\n        var promise = worker.exec(task.method, task.params, task.resolver, task.options)\n          .then(me._boundNext)\n          .catch(function () {\n            // if the worker crashed and terminated, remove it from the pool\n            if (worker.terminated) {\n              return me._removeWorker(worker);\n            }\n          }).then(function() {\n            me._next(); // trigger next task in the queue\n          });\n\n        // start queued timer now\n        if (typeof task.timeout === 'number') {\n          promise.timeout(task.timeout);\n        }\n      } else {\n        // The task taken was already complete (either rejected or resolved), so just trigger next task in the queue\n        me._next();\n      }\n    }\n  }\n};\n\n/**\n * Get an available worker. If no worker is available and the maximum number\n * of workers isn't yet reached, a new worker will be created and returned.\n * If no worker is available and the maximum number of workers is reached,\n * null will be returned.\n *\n * @return {WorkerHandler | null} worker\n * @private\n */\nPool.prototype._getWorker = function() {\n  // find a non-busy worker\n  var workers = this.workers;\n  for (var i = 0; i < workers.length; i++) {\n    var worker = workers[i];\n    if (worker.busy() === false) {\n      return worker;\n    }\n  }\n\n  if (workers.length < this.maxWorkers) {\n    // create a new worker\n    worker = this._createWorkerHandler();\n    workers.push(worker);\n    return worker;\n  }\n\n  return null;\n};\n\n/**\n * Remove a worker from the pool.\n * Attempts to terminate worker if not already terminated, and ensures the minimum\n * pool size is met.\n * @param {WorkerHandler} worker\n * @return {Promise<WorkerHandler>}\n * @private\n */\nPool.prototype._removeWorker = function(worker) {\n  var me = this;\n\n  DEBUG_PORT_ALLOCATOR.releasePort(worker.debugPort);\n  // _removeWorker will call this, but we need it to be removed synchronously\n  this._removeWorkerFromList(worker);\n  // If minWorkers set, spin up new workers to replace the crashed ones\n  this._ensureMinWorkers();\n  // terminate the worker (if not already terminated)\n  return new Promise(function(resolve, reject) {\n    worker.terminate(false, function(err) {\n      me.onTerminateWorker({\n        forkArgs: worker.forkArgs,\n        forkOpts: worker.forkOpts,\n        workerThreadOpts: worker.workerThreadOpts,\n        script: worker.script\n      });\n      if (err) {\n        reject(err);\n      } else {\n        resolve(worker);\n      }\n    });\n  });\n};\n\n/**\n * Remove a worker from the pool list.\n * @param {WorkerHandler} worker\n * @private\n */\nPool.prototype._removeWorkerFromList = function(worker) {\n  // remove from the list with workers\n  var index = this.workers.indexOf(worker);\n  if (index !== -1) {\n    this.workers.splice(index, 1);\n  }\n};\n\n/**\n * Close all active workers. Tasks currently being executed will be finished first.\n * @param {boolean} [force=false]   If false (default), the workers are terminated\n *                                  after finishing all tasks currently in\n *                                  progress. If true, the workers will be\n *                                  terminated immediately.\n * @param {number} [timeout]        If provided and non-zero, worker termination promise will be rejected\n *                                  after timeout if worker process has not been terminated.\n * @return {Promise.<void, Error>}\n */\nPool.prototype.terminate = function (force, timeout) {\n  var me = this;\n\n  // cancel any pending tasks\n  this.tasks.forEach(function (task) {\n    task.resolver.reject(new Error('Pool terminated'));\n  });\n  this.tasks.length = 0;\n\n  var f = function (worker) {\n    DEBUG_PORT_ALLOCATOR.releasePort(worker.debugPort);\n    this._removeWorkerFromList(worker);\n  };\n  var removeWorker = f.bind(this);\n\n  var promises = [];\n  var workers = this.workers.slice();\n  workers.forEach(function (worker) {\n    var termPromise = worker.terminateAndNotify(force, timeout)\n      .then(removeWorker)\n      .always(function() {\n        me.onTerminateWorker({\n          forkArgs: worker.forkArgs,\n          forkOpts: worker.forkOpts,\n          workerThreadOpts: worker.workerThreadOpts,\n          script: worker.script\n        });\n      });\n    promises.push(termPromise);\n  });\n  return Promise.all(promises);\n};\n\n/**\n * Retrieve statistics on tasks and workers.\n * @return {{totalWorkers: number, busyWorkers: number, idleWorkers: number, pendingTasks: number, activeTasks: number}} Returns an object with statistics\n */\nPool.prototype.stats = function () {\n  var totalWorkers = this.workers.length;\n  var busyWorkers = this.workers.filter(function (worker) {\n    return worker.busy();\n  }).length;\n\n  return {\n    totalWorkers:  totalWorkers,\n    busyWorkers:   busyWorkers,\n    idleWorkers:   totalWorkers - busyWorkers,\n\n    pendingTasks:  this.tasks.length,\n    activeTasks:   busyWorkers\n  };\n};\n\n/**\n * Ensures that a minimum of minWorkers is up and running\n * @private\n */\nPool.prototype._ensureMinWorkers = function() {\n  if (this.minWorkers) {\n    for(var i = this.workers.length; i < this.minWorkers; i++) {\n      this.workers.push(this._createWorkerHandler());\n    }\n  }\n};\n\n/**\n * Helper function to create a new WorkerHandler and pass all options.\n * @return {WorkerHandler}\n * @private\n */\nPool.prototype._createWorkerHandler = function () {\n  const overriddenParams = this.onCreateWorker({\n    forkArgs: this.forkArgs,\n    forkOpts: this.forkOpts,\n    workerOpts: this.workerOpts,\n    workerThreadOpts: this.workerThreadOpts,\n    script: this.script\n  }) || {};\n\n  return new WorkerHandler(overriddenParams.script || this.script, {\n    forkArgs: overriddenParams.forkArgs || this.forkArgs,\n    forkOpts: overriddenParams.forkOpts || this.forkOpts,\n    workerOpts: overriddenParams.workerOpts || this.workerOpts,\n    workerThreadOpts: overriddenParams.workerThreadOpts || this.workerThreadOpts,\n    debugPort: DEBUG_PORT_ALLOCATOR.nextAvailableStartingAt(this.debugPortStart),\n    workerType: this.workerType,\n    workerTerminateTimeout: this.workerTerminateTimeout,\n    emitStdStreams: this.emitStdStreams,\n  });\n}\n\n/**\n * Ensure that the maxWorkers option is an integer >= 1\n * @param {*} maxWorkers\n * @returns {boolean} returns true maxWorkers has a valid value\n */\nfunction validateMaxWorkers(maxWorkers) {\n  if (!isNumber(maxWorkers) || !isInteger(maxWorkers) || maxWorkers < 1) {\n    throw new TypeError('Option maxWorkers must be an integer number >= 1');\n  }\n}\n\n/**\n * Ensure that the minWorkers option is an integer >= 0\n * @param {*} minWorkers\n * @returns {boolean} returns true when minWorkers has a valid value\n */\nfunction validateMinWorkers(minWorkers) {\n  if (!isNumber(minWorkers) || !isInteger(minWorkers) || minWorkers < 0) {\n    throw new TypeError('Option minWorkers must be an integer number >= 0');\n  }\n}\n\n/**\n * Test whether a variable is a number\n * @param {*} value\n * @returns {boolean} returns true when value is a number\n */\nfunction isNumber(value) {\n  return typeof value === 'number';\n}\n\n/**\n * Test whether a number is an integer\n * @param {number} value\n * @returns {boolean} Returns true if value is an integer\n */\nfunction isInteger(value) {\n  return Math.round(value) == value;\n}\n\nmodule.exports = Pool;\n","/**\n * The helper class for transferring data from the worker to the main thread.\n *\n * @param {Object} message The object to deliver to the main thread.\n * @param {Object[]} transfer An array of transferable Objects to transfer ownership of.\n */\nfunction Transfer(message, transfer) {\n  this.message = message;\n  this.transfer = transfer;\n}\n\nmodule.exports = Transfer;\n","/**\n * worker must be started as a child process or a web worker.\n * It listens for RPC messages from the parent process.\n */\nvar Transfer = require('./transfer');\n\n/**\n * Special message sent by parent which causes the worker to terminate itself.\n * Not a \"message object\"; this string is the entire message.\n */\nvar TERMINATE_METHOD_ID = '__workerpool-terminate__';\n\n// var nodeOSPlatform = require('./environment').nodeOSPlatform;\n\n// create a worker API for sending and receiving messages which works both on\n// node.js and in the browser\nvar worker = {\n  exit: function() {}\n};\nif (typeof self !== 'undefined' && typeof postMessage === 'function' && typeof addEventListener === 'function') {\n  // worker in the browser\n  worker.on = function (event, callback) {\n    addEventListener(event, function (message) {\n      callback(message.data);\n    })\n  };\n  worker.send = function (message, transfer) {\n     transfer ? postMessage(message, transfer) : postMessage (message);\n  };\n}\nelse if (typeof process !== 'undefined') {\n  // node.js\n\n  var WorkerThreads;\n  try {\n    WorkerThreads = require('worker_threads');\n  } catch(error) {\n    if (typeof error === 'object' && error !== null && error.code === 'MODULE_NOT_FOUND') {\n      // no worker_threads, fallback to sub-process based workers\n    } else {\n      throw error;\n    }\n  }\n\n  if (WorkerThreads &&\n    /* if there is a parentPort, we are in a WorkerThread */\n    WorkerThreads.parentPort !== null) {\n    var parentPort  = WorkerThreads.parentPort;\n    worker.send = parentPort.postMessage.bind(parentPort);\n    worker.on = parentPort.on.bind(parentPort);\n    worker.exit = process.exit.bind(process);\n  } else {\n    worker.on = process.on.bind(process);\n    // ignore transfer argument since it is not supported by process\n    worker.send = function (message) {\n      process.send(message);\n    };\n    // register disconnect handler only for subprocess worker to exit when parent is killed unexpectedly\n    worker.on('disconnect', function () {\n      process.exit(1);\n    });\n    worker.exit = process.exit.bind(process);\n  }\n}\nelse {\n  throw new Error('Script must be executed as a worker');\n}\n\nfunction convertError(error) {\n  return Object.getOwnPropertyNames(error).reduce(function(product, name) {\n    return Object.defineProperty(product, name, {\n\tvalue: error[name],\n\tenumerable: true\n    });\n  }, {});\n}\n\n/**\n * Test whether a value is a Promise via duck typing.\n * @param {*} value\n * @returns {boolean} Returns true when given value is an object\n *                    having functions `then` and `catch`.\n */\nfunction isPromise(value) {\n  return value && (typeof value.then === 'function') && (typeof value.catch === 'function');\n}\n\n// functions available externally\nworker.methods = {};\n\n/**\n * Execute a function with provided arguments\n * @param {String} fn     Stringified function\n * @param {Array} [args]  Function arguments\n * @returns {*}\n */\nworker.methods.run = function run(fn, args) {\n  var f = new Function('return (' + fn + ').apply(null, arguments);');\n  return f.apply(f, args);\n};\n\n/**\n * Get a list with methods available on this worker\n * @return {String[]} methods\n */\nworker.methods.methods = function methods() {\n  return Object.keys(worker.methods);\n};\n\n/**\n * Custom handler for when the worker is terminated.\n */\nworker.terminationHandler = undefined;\n\n/**\n * Cleanup and exit the worker.\n * @param {Number} code \n * @returns \n */\nworker.cleanupAndExit = function(code) {\n  var _exit = function() {\n    worker.exit(code);\n  }\n\n  if(!worker.terminationHandler) {\n    return _exit();\n  }\n\n  var result = worker.terminationHandler(code);\n  if (isPromise(result)) {\n    result.then(_exit, _exit);\n  } else {\n    _exit();\n  }\n}\n\nvar currentRequestId = null;\n\nworker.on('message', function (request) {\n  if (request === TERMINATE_METHOD_ID) {\n    return worker.cleanupAndExit(0);\n  }\n  try {\n    var method = worker.methods[request.method];\n\n    if (method) {\n      currentRequestId = request.id;\n      \n      // execute the function\n      var result = method.apply(method, request.params);\n\n      if (isPromise(result)) {\n        // promise returned, resolve this and then return\n        result\n            .then(function (result) {\n              if (result instanceof Transfer) {\n                worker.send({\n                  id: request.id,\n                  result: result.message,\n                  error: null\n                }, result.transfer);\n              } else {\n                worker.send({\n                  id: request.id,\n                  result: result,\n                  error: null\n                });\n              }\n              currentRequestId = null;\n            })\n            .catch(function (err) {\n              worker.send({\n                id: request.id,\n                result: null,\n                error: convertError(err)\n              });\n              currentRequestId = null;\n            });\n      }\n      else {\n        // immediate result\n        if (result instanceof Transfer) {\n          worker.send({\n            id: request.id,\n            result: result.message,\n            error: null\n          }, result.transfer);\n        } else {\n          worker.send({\n            id: request.id,\n            result: result,\n            error: null\n          });\n        }\n\n        currentRequestId = null;\n      }\n    }\n    else {\n      throw new Error('Unknown method \"' + request.method + '\"');\n    }\n  }\n  catch (err) {\n    worker.send({\n      id: request.id,\n      result: null,\n      error: convertError(err)\n    });\n  }\n});\n\n/**\n * Register methods to the worker\n * @param {Object} [methods]\n * @param {import('./types.js').WorkerRegisterOptions} [options]\n */\nworker.register = function (methods, options) {\n\n  if (methods) {\n    for (var name in methods) {\n      if (methods.hasOwnProperty(name)) {\n        worker.methods[name] = methods[name];\n      }\n    }\n  }\n\n  if (options) {\n    worker.terminationHandler = options.onTerminate;\n  }\n\n  worker.send('ready');\n};\n\nworker.emit = function (payload) {\n  if (currentRequestId) {\n    if (payload instanceof Transfer) {\n      worker.send({\n        id: currentRequestId,\n        isEvent: true,\n        payload: payload.message\n      }, payload.transfer);\n      return;\n    }\n\n    worker.send({\n      id: currentRequestId,\n      isEvent: true,\n      payload\n    });\n  }\n};\n\nif (typeof exports !== 'undefined') {\n  exports.add = worker.register;\n  exports.emit = worker.emit;\n}\n","const {platform, isMainThread, cpus} = require('./environment');\n\n/** @typedef {import(\"./Pool\")} Pool */\n/** @typedef {import(\"./types.js\").WorkerPoolOptions} WorkerPoolOptions */\n/** @typedef {import(\"./types.js\").WorkerRegisterOptions} WorkerRegisterOptions */\n\n/**\n * @template { { [k: string]: (...args: any[]) => any } } T\n * @typedef {import('./types.js').Proxy<T>} Proxy<T>\n */\n\n/**\n * @overload\n * Create a new worker pool\n * @param {WorkerPoolOptions} [script]\n * @returns {Pool} pool\n */\n/**\n * @overload\n * Create a new worker pool\n * @param {string} [script]\n * @param {WorkerPoolOptions} [options]\n * @returns {Pool} pool\n */\nfunction pool(script, options) {\n  var Pool = require('./Pool');\n\n  return new Pool(script, options);\n};\nexports.pool = pool;\n\n/**\n * Create a worker and optionally register a set of methods to the worker.\n * @param {{ [k: string]: (...args: any[]) => any }} [methods]\n * @param {WorkerRegisterOptions} [options]\n */\nfunction worker(methods, options) {\n  var worker = require('./worker');\n  worker.add(methods, options);\n};\nexports.worker = worker;\n\n/**\n * Sends an event to the parent worker pool.\n * @param {any} payload \n */\nfunction workerEmit(payload) {\n  var worker = require('./worker');\n  worker.emit(payload);\n};\nexports.workerEmit = workerEmit;\n\nconst {Promise} = require('./Promise');\nexports.Promise = Promise;\n\nexports.Transfer = require('./transfer');\n\nexports.platform = platform;\nexports.isMainThread = isMainThread;\nexports.cpus = cpus;\n"],"names":["isNode","nodeProcess","versions","node","module","exports","platform","process","worker_threads","require","isMainThread","connected","Window","cpus","self","navigator","hardwareConcurrency","length","Promise","handler","parent","me","SyntaxError","_onSuccess","_onFail","resolved","rejected","pending","_process","onSuccess","onFail","push","then","resolve","reject","s","_then","f","_resolve","result","forEach","fn","_reject","error","cancel","CancellationError","timeout","delay","timer","setTimeout","TimeoutError","always","clearTimeout","callback","res","prototype","all","promises","remaining","results","p","i","defer","resolver","promise","message","stack","Error","constructor","name","_Promise","validateOptions","options","allowedOptionNames","objectName","optionNames","Object","keys","unknownOptionName","find","optionName","includes","illegalOptionName","allowedOptionName","workerOptsNames","forkOptsNames","workerThreadOptsNames","embeddedWorker","_require$$","require$$0","environment","require$$1","_require$$2","require$$2","TERMINATE_METHOD_ID","ensureWorkerThreads","WorkerThreads","tryRequireWorkerThreads","ensureWebWorker","Worker","_typeof","code","getDefaultWorker","Blob","window","URL","createObjectURL","blob","require$$3","type","__dirname","setupWorker","script","workerType","setupBrowserWorker","workerOpts","setupWorkerThreadWorker","setupProcessWorker","resolveForkOptions","worker","isBrowserWorker","on","event","addEventListener","data","send","transfer","postMessage","_options$emitStdStrea","_options$emitStdStrea2","workerThreadOpts","_objectSpread","stdout","emitStdStreams","stderr","isWorkerThread","kill","terminate","disconnect","emit","child_process","forkOpts","fork","forkArgs","call","isChildProcess","opts","processExecArgv","execArgv","join","inspectorActive","indexOf","debugBrk","debugPort","arg","assign","concat","stdio","undefined","objectToError","obj","temp","props","handleEmittedStdPayload","payload","processing","task","values","WorkerHandler","_options","workerTerminateTimeout","ready","requestQueue","toString","response","terminated","dispatchQueuedRequests","id","isEvent","terminating","onError","create","_iterator","_createForOfIteratorHelper","splice","_step","n","done","request","value","err","e","exitCode","signalCode","spawnargs","spawnfile","cleaning","terminationHandler","lastId","methods","exec","method","params","catch","terminateAndNotify","busy","force","cleanup","removeAllListeners","killed","cleanExitTimeout","once","WorkerHandlerModule","_tryRequireWorkerThreads","_setupProcessWorker","_setupBrowserWorker","_setupWorkerThreadWorker","MAX_PORTS","debugPortAllocator","DebugPortAllocator","ports","nextAvailableStartingAt","starting","releasePort","port","DEBUG_PORT_ALLOCATOR","Pool","workers","tasks","freeze","debugPortStart","nodeWorker","maxQueueSize","Infinity","onCreateWorker","onTerminateWorker","validateMaxWorkers","maxWorkers","Math","max","minWorkers","validateMinWorkers","_ensureMinWorkers","_boundNext","_next","bind","Array","isArray","TypeError","originalTimeout","String","proxy","arguments","pool","slice","_getWorker","shift","_removeWorker","_createWorkerHandler","_removeWorkerFromList","index","removeWorker","termPromise","stats","totalWorkers","busyWorkers","filter","idleWorkers","pendingTasks","activeTasks","overriddenParams","isNumber","isInteger","round","Pool_1","Transfer","exit","parentPort","convertError","getOwnPropertyNames","reduce","product","defineProperty","enumerable","isPromise","run","args","Function","apply","cleanupAndExit","_exit","currentRequestId","register","hasOwnProperty","onTerminate","add","pool_1","src","worker_1","workerEmit","workerEmit_1","require$$4","platform_1","isMainThread_1","cpus_1"],"mappings":"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"}